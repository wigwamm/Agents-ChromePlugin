// Generated by CoffeeScript 1.6.3
(function() {
  var FLAG_CURRENT_LISTING, RETURN_CURRENT_LISTING, SEARCH_URLS, SET_CURRENT_LISTING, sendMessage;

  SET_CURRENT_LISTING = 0;

  RETURN_CURRENT_LISTING = 1;

  FLAG_CURRENT_LISTING = 2;

  SEARCH_URLS = 3;

  sendMessage = function(action, json, callback) {
    if (callback == null) {
      callback = null;
    }
    return chrome.runtime.sendMessage({
      action: action,
      data: json
    }, function(response) {
      if (callback !== null) {
        return callback(response);
      }
    });
  };

  $(function() {
    var address, links, propertyType, thumbnail, urls;
    propertyType = $("#propertytype").text();
    address = $("#addresscontainer").text();
    thumbnail = $("#mainphoto").attr("src");
    sendMessage(SET_CURRENT_LISTING, {
      type: propertyType,
      address: address,
      thumbnail: thumbnail,
      url: window.location.href
    });
    urls = [];
    links = $('.address.bedrooms a');
    links.each(function(i, el) {
      return urls.push(window.location.origin + $(el).attr('href'));
    });
    if (urls.length === 0) {
      return;
    }
    return sendMessage(SEARCH_URLS, urls, function(listings) {
      var listing, url, _i, _len, _results;
      _results = [];
      for (_i = 0, _len = listings.length; _i < _len; _i++) {
        listing = listings[_i];
        _results.push((function() {
          var _j, _len1, _ref, _results1;
          _ref = listing.urls;
          _results1 = [];
          for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
            url = _ref[_j];
            _results1.push(links.each(function(i, el) {
              var linkUrl;
              linkUrl = window.location.origin + $(el).attr('href');
              if (linkUrl === url) {
                return $(el).parents('li').css({
                  'background-color': 'red'
                });
              }
            }));
          }
          return _results1;
        })());
      }
      return _results;
    });
  });

}).call(this);
