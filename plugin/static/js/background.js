// Generated by CoffeeScript 1.6.3
(function() {
  var API_URL, FLAG_CURRENT_LISTING, RETURN_CURRENT_LISTING, SEARCH_URLS, SET_CURRENT_LISTING, currentListing, flagCurrentListing, onMessage, searchUrls, unavailableListings;

  currentListing = null;

  SET_CURRENT_LISTING = 0;

  RETURN_CURRENT_LISTING = 1;

  FLAG_CURRENT_LISTING = 2;

  SEARCH_URLS = 3;

  API_URL = "http://localhost:3000";

  flagCurrentListing = function() {
    if (currentListing === null) {
      return;
    }
    return $.post(API_URL + '/listings', currentListing, function(response) {
      return console.log("Success", response);
    }, function(error) {
      return console.log("Error", error);
    });
  };

  unavailableListings = [];

  searchUrls = function(urls, callback) {
    return $.ajax(API_URL + '/listings/search.json', {
      type: 'post',
      dataType: 'json',
      data: {
        urls: urls
      },
      success: function(response) {
        console.log("Success", response);
        return callback(response);
      },
      error: function(error) {
        console.log("Error", error);
        return callback([]);
      }
    });
  };

  onMessage = function(request, sender, sendResponse) {
    switch (request.action) {
      case SET_CURRENT_LISTING:
        currentListing = request.data;
        console.log(request.data);
        break;
      case RETURN_CURRENT_LISTING:
        sendResponse(currentListing);
        break;
      case FLAG_CURRENT_LISTING:
        flagCurrentListing();
        break;
      case SEARCH_URLS:
        searchUrls(request.data, function(listings) {
          return sendResponse(listings);
        });
        break;
      default:
        console.log("Unknown message");
    }
    return true;
  };

  chrome.runtime.onMessage.addListener(onMessage);

}).call(this);
